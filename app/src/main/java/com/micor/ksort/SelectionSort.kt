package com.micor.ksort

/**
 * Created by alexander on 18.02.2018.
 * Сортировка выбора - это простой алгоритм сортировки, разделяющий список входных данных на две части: подсписок элементов, уже отсортированных,
 * которые создаются слева направо в начале (слева) списка и подсписок оставшихся элементов
 * для сортировки, которые занимают остальную часть списка. Первоначально отсортированный подсписок пуст, а несортированный подсписок
 * - это весь список ввода. Алгоритм продолжается путем нахождения наименьшего (или самого большого, в зависимости от порядка сортировки) элемента
 * в несортированном подсписке, обменивая (свопинг) его с самым левым несортированным элементом
 * (помещая его в отсортированный порядок) и перемещая границы сублистов на один элемент справа.
 */
class SelectionSort<T : Comparable<T>> : ISortable<T> {
    override fun sort(arr: Array<T>) {
        for (i in arr.indices) {
            var min = i
            (i+1 until arr.size)
                    .asSequence()
                    .filter { arr[it] < arr[min] }
                    .forEach { min = it }
            if (min != i) arr.exchange(min, i)
        }
    }
}